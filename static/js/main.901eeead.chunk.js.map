{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Controls/Controls.module.css","Components/Section/Section.module.css","Components/Container/Container.module.css","Components/Notification/Notification.module.css","Components/Container/Container.js","Components/Section/Section.js","Components/Controls/Controls.js","Components/Statistics/Statistics.js","Components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","section","Controls","onClick","feedbackBtns","btn","data-action","Statistics","good","neutral","bad","total","percent","list","item","Notification","message","notification","App","state","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","handleFeedback","e","feedbackType","target","dataset","action","setState","prevState","blur","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.901eeead.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2jSwm\",\"item\":\"Statistics_item__3SSd0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Controls_btn__24j57\",\"feedbackBtns\":\"Controls_feedbackBtns__17mj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1w9aR\",\"title\":\"Section_title__3kN-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__LQn73\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__j-SuO\"};","import styles from \"./Container.module.css\";\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import React from \"react\";\nimport styles from \"./Section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      <p className={styles.title}>{title}</p>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n","import React, { Fragment } from \"react\";\nimport styles from \"./Controls.module.css\";\n\nfunction Controls({ onClick }) {\n  return (\n    <Fragment>\n      <div className={styles.feedbackBtns}>\n        <button className={styles.btn} data-action=\"good\" onClick={onClick}>\n          Good\n        </button>\n        <button className={styles.btn} data-action=\"neutral\" onClick={onClick}>\n          Neutral\n        </button>\n        <button className={styles.btn} data-action=\"bad\" onClick={onClick}>\n          Bad\n        </button>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Controls;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Statistics.module.css\";\n\nfunction Statistics({ good, neutral, bad, total, percent }) {\n  return (\n    <Fragment>\n      <ul className={styles.list}>\n        <li className={styles.item}>Good: {good}</li>\n        <li className={styles.item}>Neutral: {neutral}</li>\n        <li className={styles.item}>Bad: {bad}</li>\n        <li className={styles.item}>Total: {total}</li>\n        <li className={styles.item}>Positive feedback: {percent}%</li>\n      </ul>\n    </Fragment>\n  );\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  percent: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport styles from \"./Notification.module.css\";\n\nfunction Notification({ message }) {\n  return <div className={styles.notification}>{message}</div>;\n}\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport Container from \"./Components/Container\";\nimport Section from \"./Components/Section\";\nimport Controls from \"./Components/Controls\";\nimport Statistics from \"./Components/Statistics\";\nimport Notification from \"./Components/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return +((this.state.good / this.countTotalFeedback()) * 100).toFixed(0);\n  };\n\n  handleFeedback = (e) => {\n    const feedbackType = e.target.dataset.action;\n    this.setState((prevState) => ({\n      [feedbackType]: prevState[feedbackType] + 1,\n    }));\n    e.target.blur();\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <Controls onClick={this.handleFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() !== 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              percent={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}